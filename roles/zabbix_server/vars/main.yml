---
# vars file for ansible-zabbix-server

#path of zabbix configuration
zabbix_conf_path: /etc/zabbix
zabbix_http_path: /etc/httpd/conf.d/
zabbix_web_path: /etc/zabbix/web/

zabbix_user: zabbix
zabbix_group: zabbix

#rpm key of zabbix
zabbix_key_url: "http://repo.zabbix.com/RPM-GPG-KEY-ZABBIX"
#rpm of zabbix
zabbix_rpm_url: "http://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm"

# service port
service_ports:
  - "80"
  - "10051"

#time zone
timezone: 'America/Sao_Paulo'

#postgres
db_host: "{{ groups['zabbix_db'][0] }}"
db_port: '5432'
db_name: 'zabbix'
db_user: 'zabbix'
db_password: 'password'
db_schema: 'public'
db_type: 'POSTGRESQL'

#install list
#zabbix-server-pgsql, zabbix-web-pgsql, zabbix-agent
zabbix_server_install:
    - 'zabbix-server-pgsql'
    - 'zabbix-web-pgsql'
    - 'zabbix-agent'
    - 'postgresql'

#start services
services:
   - 'zabbix-server'
   - 'httpd'


#rpm key of postgres and timescaledb
postgres_key_url: "https://download.postgresql.org/pub/repos/yum/RPM-GPG-KEY-PGDG-11"
#rpm of postgres and timescaledb
postgres_rpm_url: "https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"


#python libraries for PosgreSQL modules
postgresql_python_library:
  - python-psycopg2
  - python-ipaddress

#set PostgreSQL environment
postgresql_user: postgres
postgresql_group: postgres

postgresql_service_state: started
postgresql_service_enabled: true

postgresql_version: "11"
postgresql_data_dir: "/var/lib/pgsql/{{postgresql_version}}/data"
postgresql_bin_path: "/usr/pgsql-{{postgresql_version}}/bin/"
postgresql_config_path: "/var/lib/pgsql/{{postgresql_version}}/data"
postgresql_daemon: "postgresql-{{postgresql_version}}"
postgresql_packages:
- postgresql{{postgresql_version}}
- postgresql{{postgresql_version}}-server
- postgresql{{postgresql_version}}-contrib
- postgresql{{postgresql_version}}-libs
- timescaledb_{{postgresql_version}}

postgresql_users:
  - name: "{{ db_user }}" 
    password: "{{ db_password }}"

postgresql_databases:
  - name: "{{ db_name }}"
    owner: "{{ db_user }}"

postgresql_hba_entries:
  - {type: local, database: all, user: postgres, auth_method: peer}
  - {type: local, database: all, user: all, auth_method: peer}
  - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5}
  - {type: host, database: all, user: all, address: '::1/128', auth_method: md5}
  - {type: local, database: replication, user: all, auth_method: peer}
  - {type: host, database: replication, user: all, address: '127.0.0.1/32', auth_method: md5}
  - {type: host, database: replication, user: all, address: '::1/128', auth_method: md5}
  - {type: host, database: zabbix, user: zabbix, address: '0.0.0.0/0', auth_method: trust}    
  - {type: host, database: all, user: all, address: 'samenet', auth_method: md5}
  - {type: host, database: replication, user: all, address: 'samenet', auth_method: md5}
  - {type: hostssl, database: all, user: all, address: '0.0.0.0/0', auth_method: md5, options: 'clientcert=1'}
  - {type: hostnossl, database: all, user: all, address: '0.0.0.0/0', auth_method: reject}

postgresql_conf_default_guc:
  - { regexp: "^#?shared_preload_libraries = .*$", guc: "shared_preload_libraries = 'timescaledb'" }
